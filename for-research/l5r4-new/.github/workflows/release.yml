name: Release L5R4 System

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        # Disable cache to avoid version conflicts
        # cache: 'npm'

    - name: Install dependencies (force fresh install)
      run: |
        rm -rf node_modules
        npm install --force

    - name: Build CSS
      run: npm run build:css

    - name: Extract version from tag
      id: get_version
      run: |
        # Extract version from tag, handling both v1.0.0 and 1.0.0 formats
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION=${GITHUB_REF#refs/tags/}
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"
        echo "Full ref: $GITHUB_REF"

    - name: Update system.json version
      run: |
        # Update only the version field in system.json
        # Leave manifest and download URLs pointing to /latest/download/ for Foundry auto-update
        sed -i 's/"version": ".*"/"version": "${{ steps.get_version.outputs.VERSION }}"/' system.json
        
        # Verify the changes
        echo "Updated system.json version to ${{ steps.get_version.outputs.VERSION }}:"
        grep -A 2 '"version"' system.json

    - name: Create system ZIP
      run: |
        # Create a clean ZIP excluding development files
        zip -r l5r4.zip . \
          -x "*.git*" \
          -x "node_modules/*" \
          -x "scss/*" \
          -x "gulpfile.js" \
          -x "package*.json" \
          -x ".github/*" \
          -x "*.md" \
          -x "COPYING"
        
        echo "Created l5r4.zip with contents:"
        unzip -l l5r4.zip

    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          system.json
          l5r4.zip
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Notify completion
      run: |
        echo "âœ… Release v${{ steps.get_version.outputs.VERSION }} completed successfully!"
        echo "ðŸ“¦ Assets uploaded:"
        echo "  - system.json (manifest file)"
        echo "  - l5r4.zip (system package)"
        echo "ðŸ”— Download URL: https://github.com/ernieayala/l5r4/releases/download/v${{ steps.get_version.outputs.VERSION }}/l5r4.zip"
        echo "ðŸ”— Manifest URL: https://github.com/ernieayala/l5r4/releases/download/v${{ steps.get_version.outputs.VERSION }}/system.json"
